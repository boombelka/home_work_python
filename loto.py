#!/usr/bin/python3

"""
== Лото ==

Правила игры в лото.

Игра ведется с помощью специальных карточек, на которых отмечены числа, 
и фишек (бочонков) с цифрами.

Количество бочонков — 90 штук (с цифрами от 1 до 90).

Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр, 
расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:

--------------------------
    9 43 62          74 90
 2    27    75 78    82
   41 56 63     76      86 
--------------------------

В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается 
случайная карточка. 

Каждый ход выбирается один случайный бочонок и выводится на экран.
Также выводятся карточка игрока и карточка компьютера.

Пользователю предлагается зачеркнуть цифру на карточке или продолжить.
Если игрок выбрал "зачеркнуть":
	Если цифра есть на карточке - она зачеркивается и игра продолжается.
	Если цифры на карточке нет - игрок проигрывает и игра завершается.
Если игрок выбрал "продолжить":
	Если цифра есть на карточке - игрок проигрывает и игра завершается.
	Если цифры на карточке нет - игра продолжается.
	
Побеждает тот, кто первый закроет все числа на своей карточке.

Пример одного хода:

Новый бочонок: 70 (осталось 76)
------ Ваша карточка -----
 6  7          49    57 58
   14 26     -    78    85
23 33    38    48    71   
--------------------------
-- Карточка компьютера ---
 7 11     - 14    87      
      16 49    55 77    88    
   15 20     -       76  -
--------------------------
Зачеркнуть цифру? (y/n)

Подсказка: каждый следующий случайный бочонок из мешка удобно получать 
с помощью функции-генератора.

Подсказка: для работы с псевдослучайными числами удобно использовать 
модуль random: http://docs.python.org/3/library/random.html

"""
import random as r

def maket_board(fn):
    def wrapped(*args):
        fn(*args)
        print(f'------------------------------')
    return wrapped

class Pole:
    def __init__(self):
        pass

    def loto(self):
        loto = [i for i in range(1, 99)]
        return(loto)

    def shake(self):
        m = r.sample(self.loto(), k=len(self.loto()))
        #n = shuffle(m)
        return(m)

    def turn(self, m, number):
        for i in range(1, 30):
            if m[i] == str(number):
                m[i] = '--'
            else:
                pass
        return(m)

    @maket_board
    def kart(self, k1, m, msg):
        for i in k1:
            n = int(float(i) // float(3.3))
            if n == 0:
                n =n+1
            else:
                pass
            st = str(i)
            m[n] = st
        print(f'----{msg}-----------')
        print(f'{m[1]} {m[4]} {m[7]} {m[10]} {m[13]} {m[16]} {m[19]} {m[22]} {m[25]} {m[28]}')
        print(f'{m[2]} {m[5]} {m[8]} {m[11]} {m[14]} {m[17]} {m[20]} {m[23]} {m[26]} {m[29]}')
        print(f'{m[3]} {m[6]} {m[9]} {m[12]} {m[15]} {m[18]} {m[21]} {m[24]} {m[27]} {m[30]}')
        return m

    @maket_board
    def kart_turn(self, m, msg):
        print(f'----{msg}----------')
        print(f'{m[1]} {m[4]} {m[7]} {m[10]} {m[13]} {m[16]} {m[19]} {m[22]} {m[25]} {m[28]}')
        print(f'{m[2]} {m[5]} {m[8]} {m[11]} {m[14]} {m[17]} {m[20]} {m[23]} {m[26]} {m[29]}')
        print(f'{m[3]} {m[6]} {m[9]} {m[12]} {m[15]} {m[18]} {m[21]} {m[24]} {m[27]} {m[30]}')
        return m


    def errors(self, ask, yes, no, err_msg, exit_mark=0):
        j = False
        while j == False:
            a = input(ask)
            if a == yes:
                j = True
                return(j)
            elif a == no and exit_mark == 1:
                print('До новых встреч')
                os.exit
            elif a == no and exit_mark == 0:
                j = True
            else:
                print(f'{err_msg}')
        return (j)

    def win(self, m):
        #marker_turn += 1
        win = 0
        for u in range(1, 31):
            if m[u] == '  ' or m[u] == '--':
                win += 1
            else:
                pass
        if win == 30:
            return(True)
        else:
            return(False)

while True:
    loto_turn = (Pole().shake())
    k1 = ['9','43','62','70','90','2','27','75','16','82','41','56','63','76','86']
    k2 = ['1','10','45','67','91','19','88','71','15','98','41','56','63','76','82']
    m = ['  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ']
    m2 = ['  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ','  ']


    #Pole().kart(k2, m2)
    # маркер окончания игры
    gameover = False
    # текущий тур
    marker_turn = 1
    # строк ходов
    turn_string = Pole().shake()
    print("Добро пожаловать в игр ЛОТО")
    (Pole().errors('Хотите начать играть? Д/Н','д', 'н', 'Вы ответили неправильно, попробуйте еще раз', 1))
    Pole().kart(k1, m, 'карточка компьютера')
    Pole().kart(k2, m2, ' ваша карточка ')
    while gameover == False:
        # вытаскиваем бочку
        print(f'Ход {marker_turn}, Число: {turn_string[marker_turn]}')
        Pole().kart_turn(m, 'карточка компьютера')
        Pole().kart_turn(m2, ' ваша карточка ')
        # отмечаем на карточке (да/нет)
        do = (Pole().errors('Посмотрите на свое поле внимательно. У вас есть такое число? .', 'д', 'н', 'Вы ответили неправильно, попробуйте еще раз', 0))
        if do == True:
            m2 = Pole().turn(m2, turn_string[marker_turn])
        else:
            pass
        m = Pole().turn(m, turn_string[marker_turn])
        #  Проверка на выйгрыш
        # если на карточке нет ни одной дигиты - считаем кто проиграл
        comp = Pole().win(m)
        user = Pole().win(m2)
        if comp == True and user == True:
            print('Ничья!!!!!')
            do = (Pole().errors('Хотите ли сыграть еще?', 'д', 'н',
                                'Вы ответили неправильно, попробуйте еще раз', 1))
            if do == True:
                break
        elif comp == True and user == False:
            print('Компьютер выиграл')
            do = (Pole().errors('Хотите ли сыграть еще?', 'д', 'н',
                                'Вы ответили неправильно, попробуйте еще раз', 1))
            if do == True:
                break
        elif comp== False and user == True:
            print('Вы выиграли')
            do = (Pole().errors('Хотите ли сыграть еще?', 'д', 'н',
                                'Вы ответили неправильно, попробуйте еще раз', 1))
            if do == True:
                break
        else:
            marker_turn += 1






